apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ .Values.metadata.name }} 
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.image.maxSurge }} 
      maxUnavailable: {{ .Values.image.maxUnavailable }} 
  triggers:
    - type: "ConfigChange"
    - type: "ImageChange" 
      imageChangeParams:
        automatic: true
        containerNames:
          - {{ .Values.metadata.name }}
        from:
          kind: "ImageStreamTag"
          name: {{ .Values.buildconfig.imagename }}
  strategy:
    type: "Rolling"
  paused: false   
  template:
    metadata:
      name: {{ .Values.metadata.name }} 
      labels:
        app: {{ .Values.metadata.label }} 
    spec:
      containers:
        - name: {{ .Values.image.name }} 
          image: {{ .Values.metadata.name }} 
          readinessProbe:
            httpGet: 
              path: {{ .Values.readinessProbe.path }} 
              port: {{ .Values.readinessProbe.port }} 
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }} 
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }} 
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }} 
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }} 
              port: {{ .Values.livenessProbe.port }} 
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }} 
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }} 
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }} 
          imagePullPolicy: {{ .Values.image.imagePullPolicy }} 
          lifecycle:
            preStop:
              exec:
                command: {{ .Values.image.lifecycle.preStop.command }} 
          resources:
            requests:
              cpu: {{ .Values.image.requests.cpu }} 
              memory: {{ .Values.image.requests.memory }} 
            limits:
              cpu: {{ .Values.image.limits.cpu }} 
              memory: {{ .Values.image.limits.memory }} 
          env:
            - name: {{ .Values.envOfSecrets.envMONGOUSERNAME.name }} 
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.metadata.name }} 
                  key: {{ .Values.envOfSecrets.envMONGOUSERNAME.secretKeyRef.key }} 
            - name: {{ .Values.envOfSecrets.envMONGOPASSWORD.name }} 
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.metadata.name }} 
                  key: {{ .Values.envOfSecrets.envMONGOPASSWORD.secretKeyRef.key }} 
            - name: {{ .Values.envOfConfigmaps.envMONGOPORT.name }} 
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.metadata.name }} 
                  key: {{ .Values.envOfConfigmaps.envMONGOPORT.configMapKeyRef.key }}
            - name: {{ .Values.envOfConfigmaps.envHOSTNAMEMONGODB.name }} 
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.metadata.name }} 
                  key: {{ .Values.envOfConfigmaps.envHOSTNAMEMONGODB.configMapKeyRef.key }}
            - name: {{ .Values.envOfConfigmaps.envENDPOINT.name }} 
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.metadata.name }} 
                  key: {{ .Values.envOfConfigmaps.envENDPOINT.configMapKeyRef.key }}
            - name: {{ .Values.envOfConfigmaps.envDB.name }} 
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.metadata.name }} 
                  key: {{ .Values.envOfConfigmaps.envDB.configMapKeyRef.key }}
            - name: {{ .Values.envOfConfigmaps.envSCHEMA.name }} 
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.metadata.name }} 
                  key: {{ .Values.envOfConfigmaps.envSCHEMA.configMapKeyRef.key }}
            - name: {{ .Values.envOfConfigmaps.envMODEL.name }} 
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.metadata.name }} 
                  key: {{ .Values.envOfConfigmaps.envMODEL.configMapKeyRef.key }}
          ports:
            - containerPort: {{ .Values.image.ports.containerPort }} 